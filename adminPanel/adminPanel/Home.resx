<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AvatarPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGoAAABUCAYAAABqUaJKAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABK2lDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAACjPY2BgMnB0cXJlEmBgyM0rKQpyd1KIiIxSYD/PwMbAzAAGicnFBY4BAT4gdl5+XioDBvh2jYER
        RF/WBZnFQBrgSi4oKgHSf4DYKCW1OJmBgdEAyM4uLykAijPOAbJFkrLB7A0gdlFIkDOQfQTI5kuHsK+A
        2EkQ9hMQuwjoCSD7C0h9OpjNxAE2B8KWAbFLUitA9jI45xdUFmWmZ5QoGFpaWio4puQnpSoEVxaXpOYW
        K3jmJecXFeQXJZakpgDVQtwHBoIQhaAQ0wBqtNBkoDIAxQOE9TkQHL6MYmcQYgiQXFpUBmUyMhkT5iPM
        mCPBwOC/lIGB5Q9CzKSXgWGBDgMD/1SEmJohA4OAPgPDvjkAwMZP/eeaqagAAAAJcEhZcwAACxMAAAsT
        AQCanBgAABouSURBVHhe7d0FkATdUQfwECBIcLcQXAMECBIIDhHc3d0tBIfg7u6uwSW4f7i7u7u7ffx/
        W9NTb+d6b2f3du+uErrqX3v3buRNe/d7s3eXO++88+RY0F2DR5vwGMETBE8aPMmApw6eLbh3cN/gZYMH
        Bg9YYDl2/wnj2BLLY14ueIngPoH7PfeA55k+nzN42uDuQc39USc8SjBT9/znQDt4LBb06ME9gpcP3jF4
        3+BDgk8KPj34jOAzJ3x+8PXBtwbfF/xE8FPBT0+fhZ8cPuuYcdzx4PcaG/9eP98RfFfw8OCbA/eFb5nw
        jcEXBx8VvE/wTsFbBq8cPHvw2MG1CqwdXIuGWM/dgqcLXicghJ8N/jL4+wH/MHzC3wZ/Evxh8DvBLwe/
        GPxC8PPTZ/1eY34fx0YYr2P8Xtco/FrwB8EfDfjjCX42F3P61+CfAvP/88B53xA8OHi+gMXN1PHoVGgH
        92FBhGPCzxq8YvAewRcFmPNnwa8HtPazg08MPjR4vwHvHTwkePvgLYI3DF4jeNWABr/K4hPGv/l5/Bxh
        rOB357xaQIneJGAl8FYT3nr6/W2D9wo+Pvjc4GuD7wgIigAJ7ZuCVwoeJ5ip49cp0A7uwoKY/hMHLxVg
        9FcGPxPQxr8KfiX4wuDtgpcOxARa+FwB9/Ec0yeIT08fPF4gDhD+uVExZxe47scNniJ4lsD8Xz34iOAH
        Axbp842DJwy2qOPfVdAOjmjosYJnCMSeDwv4/BLObwQmz8ezKhYkJn1e8GXBVwUPm1A/f/WELwlY1VMF
        W/7/zOReIy4jAnyigOfwjP8cUE7K+OTB1vkdP49FO1hYEBN/geA9A0wWmPlu7k1gN3HuQTD/reBPg4pD
        hOj3igFLELRrETQFoPHnJNeXEEh2njd40eDFAs+H4QRyGVHWFw94Ec/0c8EHB7LFrXM7vh6DdhAG4gLu
        FQig3x4QDMb+UiBr+thA1vb7wb8HmC1z+/KANXkArvGdg3cIaB/L8bNP+ICAkCUebxZgxEzd/A7FQMqD
        lwnePzBvz2S+3x+IpW8UcGX7lAVfpPMSJgnQ7wZfELxw8JjBTN18DkU7CBMxZVrGRfHJgqiHwvzXC14r
        +NTg9wKT9eAelIY+Y4ApssDy+7sgDnxMQAm+LhDHZurmdwgGUr9JFn40+JvgLwLzlvBQMD/L6ijWKwRc
        PE9ijp1bJCzxS+LBqv464FlYm79tqJvToWgHYSKMZjH/GXB1srQXCQR9D/HJASF5SNkc4dDE8veyQcd6
        WEXjLiJMgVo6TSFkXbNWdvM7BBO5/2sG0nMeQdb20IDgZJqSBIryd4G/iz1c24cHbxBIhCQXHSnaZYw/
        FnDxXxqcVtm6QZiI//62gOZ9YPD4AQHQFiku96fmURQ+TVBax3VJXWnXDwesBENo9C56skAhLK5J5XUr
        NtTN7xBM9JSBIlsCQAA8hTjFWijKMwVKi08LWNWvBuLrvwXcGhf55oFMtyNJhpRfvCasdwt0YjbUzesQ
        tIMQYhlaNixJqk0bSxB8OEvDVNmd1HokNRUB/c+E/w5YCuFuuYSBMEz8chxtnzVyObdDETLvFwq+O+De
        KE3Ng8Vzc7oQrMpzijNqOTWeOkpNSFkp5esHWzFoIEL8yIBlynIV/hvq5nUI2kEIYdybBlybQGvyRfcM
        TMTkPQyNHIm28tlcJo0kUBU+ZmDMhqb7FLkfjXU/7RzWvKHl3A5FiNLp89F2Lk3hS3igntNO0oVgbd8b
        UJKyNOWCgpkVyl4lSayvI/fhJlkjRVU/bqib1yFoByHEp+txEcZXBGJSkYlK0WmOYzzUSDRJXeTBMB5U
        9FJ77mZD032KxDOZpXRd9qVhuqHl3A5FaPQOYhSr8HwEJb7oQ4pLFIoFaciWID0bS6GQrF35IZX3tyUZ
        o9DfE3gOiufe7bwOQTsIIQ+CcTIZaacYVORBCELt45jZnU3EN+uAYzgBETYLlM5uJr4gYx6QJRG+jsbs
        Trv5HYIQBrJyDHR9BfZrBxIjlmuuYrBnkhQ4tuor7trfuE0xS7zl2jc03KNIFsj6ZMhKkmsR1LsHBIVx
        c3APcV/cGFchJWdtSw2TUGi7vE0gJigG5+A6kDHWI9ATKIYoeudaqpvfIZjInPXzWBTLUbO5F2WSPPiU
        OOme+92nv0uYWJvC9o5AdnphbgNRMFkfJZZQXIug3IiguL45MIa4A+7jtwNdCGm62oGLYF3+XvA7X+96
        45iEhNYqeDU9MYJvJ9iTNjoHknUqqN2PoDRZZXTAPdfPIOn4zUBME5dkhC8ZbKXozX2eOcCvCgtnFxSG
        YlrVHBbUilgPV6jwtTTBvSmEpdfchHSdT+f7ffq9YEz98imBzgZhS2cVoe8aKH63qJvfIVgQJWDdEgr1
        kzjC0nTuWb6ffYLi/UGB+lBsveC2m/tUSaNT4xobTzMedwzaQQiZlM6D1PzHA1nTSCYgI7IoyEVgdq0t
        gcJR9V+fxup3+MeAEsjEPjpwfRa5dKHt/A5BQ+5BET1jWfkuXBDOSM19rFDLHDUBCPrsgkICvNSVG+Ay
        LjAxVM1a1mcFl6WwLD0wn7WaWyu6Ckpd9Q8KdCCksDIvTLlAw1yQ+28xbjnvXTgH7biHBISgtKWk6tci
        KEmCDIa1aB91yQAqDVUIij0so1D7Isbf+Xlxyzmd8Dc0zAO5tvloEM9xYjnvXTglddeHiezH+IFA/NMP
        vRZBsRbxRAYjRZeWXzd5UAJ+3UCKrxMizT8JA06JaU5aZxIQyYqOx7UIipuR3fG3XZw6F3k4FmdtyAqy
        BUpp9X8ENsFIBm6joPBLUiLBEjKEhA11xx+CdhAGwhRFHvcnrlxwOycmLk5bR/tK2s+N6HDIoqS9tn5t
        dTduC0JceWXK6jC821B3/CFoB2EgTFFPaZ9YZr9fMFN37iEYiDZacSWghwVqGMohfZfuqvLVKFtdkO6a
        N4UQQWksE5Si2X6QDXXHH4J2sDARF6NzQEOk1WLWrNGoO3cfFqTP94LBxwXcLAuStssYuRJrQeLlxt2N
        1F37phAiKJksBbt2QSGMtIppAt8ZYOpM3bmXYSCMtw4lO1L8aiFxcQSkiWoNiQVdEFBRd/2bQqgEpcty
        I4LCKEH9joBZ60hIs2fqzt+FgWSROuqsR7fZ9TV5jV9aaKLu2jeJUAlK++j6BAUDWcG0IYRVafVrTurf
        bag7t8NAlvk1fcUiGqiRKZ29sEeuo+7aN41QJROUzkrA2HZrz1mLdnDEgmQxGpSEpZ7R0p+pO3+JiWSO
        0n4pPyHpVMj0thKFJXXX24eBWOgFK+3OORYh11fvibP2T9jtNFN3zlq0gyMWpLaxVG31VjamO3xQqhzi
        RsU4sY7ACX5L85bUXWctJmK9slXd7619G905xyLk2axxKSmECJnq1rJ9d94atINLLMi6FAswEQmALsFM
        3fkjQuXHdTvEJmtPOy2pu8YhCGGerNV6kw697rhNOjN15x2DiYSITwhsQ7Dq8PzBbMndeWvQDi6xIIzW
        +v+RQIbmwVfFqokcK9bZS2HZW/fhAnXnH4MQQenyY560X8PU2tmVmbfERO7H5dkzofa02cX9Z+rO3Yd2
        sMOCZHy6Bv8SWOGVRs/UnQ8TEZSsUTvI2xIn2xU7EGYRhHv5mXLZ52A5RkyUxJxsBbkwkBgsLNTCo3Wv
        Kz1nO7gLA2GAZQ89LRmgHiCGbKg7Fybis60/cQ22nG115Lvz9mEgc8Ak7sYeO6vH4h/Xqha0HYzLZV0a
        vRvqrnkMFiTR0simGDor1qlmHqHuGrvQDu7CQG5oS5VuhQdn3nNd1Z0LE4kP9qTbPrbcNNOedxkGInBZ
        qeUYsYjbsVhpxVncYFUsSQJjD8i8EtBd9xgsSOKl3FAb2uiiiLcp5iiX2w5ehoFoqKVzNYN9fxbMNtSd
        BxPRbsvfrNHiGq3fCu6oO3/EQJTGXDRrZZC6G9xq7eWQYdbal/nScLuNTrY5csSCKMi7BJ7TPgwWfVS8
        agcvw4KYM79vBRjzN6bdnQcD0WYrwZKR2ith906b/TXnI/fi91m28ykLa6E4NlNq7NLgSnQIy1sjBGml
        eU5ixjmeAgOZI8FIngjLtgYF8cFZZzu4DwOZhJfUuD+toI1Zd+fAQLTbVjKbOLkngvZys6Vrha/+n1iG
        yR3URZREV/9rAgK3BcwGG4uL5qN0sC2ZO2Q94hZLIijLNaxwQ91cr4KGKKG3XngRhbCuzkH1VTu4DwPp
        aEsMMFtXfa2gkIlinvMtW3NXPq190XixhaXYPFOQSRnjQqTZtnip59RjMkjL4N7RlWnpt7FWW8PEJAKl
        1aArQlk21M31qlgQ5aKY5sLaKZG98KvjVTu4BhPpSkgkaLONLZcKChbkeNZjN6o03/I192UvIYgnXBlN
        9Ol3gmExLMPOV6/FyDrrTUHXs9sVM2zql1S4pvOkyzI+279m6uZ5VTTE9Zonq/c8FHRra1x3nUI7uAYT
        CZZM2jYwFrDR0u74wg7yEOKW/QbaLlyTXUtclQQBuLT69FqODZHaNbJNGlskLogBrNW2ZV0QViio68PZ
        Nz8e387zVFiQ0sGblhIdXsC7wKssux1cg4m08cUZ2sotXZpMFC4hFoaJkgQ9Ob6d9tt95BOMKbC5zs39
        dpC/uR5GFGZXM1I3x1OhITHYzi4e43MCq9ob6s4vtINrMJHU1yYOseWgzYa3hbq5nRoLUu/ZbmD7tiSK
        le/lWzu4BhPpmfG5YoE4s1pQhZumbk7nwIK4X25cv1PMFELa8wrt4BqECEVw1JyVBPhmlIMFNeJY6q51
        GzEQqxKrJEiWRMTa9pxCO7gGIf6ecAiJsOY9f93x/48LiqhJzBvpWOib3rU7p9AOrkGI9chavMUng9HX
        KpozGdSd/8iKgTQLJBMyZt8ocPfu+EI7uAYhgrLuwnR97YAugDRbF8C4emZD3fmPrBhI1uqVJGtktjXc
        ozu+0A6uwUR8a2V91lxsTHlIILmwBUzv7sZS49uKifBE3093xUrwvbpjC+3gGkzkzQrbotxMHVUFsAVF
        rSDC09LhIglVJS6QXhBad49HVExEUDaX4p3lont3xxbawTWYiHuztqSvJs1UiGqu+l4JL7WpwL0DK+Hg
        Ii29a95KPPjoEtomWyzq7veIhIkISj2llvJlI/fpji20g2swkZhkPUnm4kunvPimYeolbD02iYZusWTD
        riV1gwauVWG9PULT5tHh1s2+EYHtIHO5Ci7Q4p4EpTksbFiiud/49yXawTWYyITqxS172WiILxpkSbaU
        WW01pq1vaZwQLUvTIiu8Mh7HepXG6qs95lv72i+hJWMKLBQTDoG2VbWu9A69jGAutph5PrDVbInleB1L
        Ya2FWY65sMY28a/KG3yyv/H+Sx6PaAfXYCBxp756wCZ/r3oShmzG9znoBbI6ewjEMHsYFHt2xopvrE1X
        nPu0pcuaFEa5LuiK++RW/cxlyizFRy82Y6glBCvMvoHZw+uSaGlREjVKweLmCDHCLipNW4uK5q9j8EOB
        N1d8qhELlk0KPAWMY3WMcz2beO3Z9SiXcdnvYrclGV9O+YCOz4V2cA0G4v50qLk2k7RPTyddjOISCUFf
        ywKjl7d9PQ9hWO10HGuzRKL4U6l7Yc3aEdcopoEmpr/7dB1Clinx7cDtsmou1fmWM7he97ak4GefS7if
        hjLLlgBZE7Ppxvc3eXPFgqTn4i1csz6XWP7d/VzzvwJLQN5bpqgsvqgEZc4E9aCOz4V2cC0mcnPL4azB
        w/l6Ai5D2s6qxCnpOoYwcxtaMFmsqq9FkJQQMAEQrocjaPCz2OaG9b1KznW9kencqfuUhlIE/p92EySB
        2p07wrg94qzeYqXvDHx44I19DLfWJo5QMLF0+VkYf2fNsl1WqqA1B4JjseOLFQTlKxRKUA/seFxoB9di
        IOss1pAIykNzS2oEzPPNXPZHEALtrC+Hom3cnTUna0seTu1l3Ugh6DWf+o4KC4S0XNC1/wATWDHXVW6M
        lSoFCNy4Y93fHkKrqVxkB0pm6cT2MVmo1zkJi5KxZg1UTD0UYh43beWb5XKLXHNZlWPK9XH/Z7co5KZc
        GI2mySZAWFJ12kR7MU/c8D5uffOYrzYt90CDxQQxAnN1Oiogc43ckq3Ufu8SgpFJYplyQdxU9Y/fOrOP
        bC+QEOm2KC3stXfNY4nHkCzxAJSs9mq4poVSFkVQ57MoGEiKXe6PxsugfBkUa+CyuB7vWFkQJAgaa5Lc
        g6RDfGMBFtRYHIGLSSzLngcxxKd9gB5y9PdLos0YzJpprATjEBJH3YvFY+7WRpSVZH5A8LyNa427ikdB
        yfquTVDaR7Icmm8/AM0BlmETosCuW8GfS9tpu/jALXEv+oMsTozjJmv/hPNYJesjPIzj4nQ6ZFPuy2VV
        il2gOBTA+VyotN/40vo6OJYV25vBbYstzqvzx88lJFfm5JnslOJpPI+4Khb57j9K7D4E5TnP6/pgIBN8
        cMCitET4fuRbvQRYm+ZNloazPIkCbVJ3IBP38B5CzGAFNJHbwGwxihJUUmI/of0T3KE4wPL0GRXRYh6B
        s2L3kVCwcuk6ZQArq5iIWVy17n99YiaX6VkwUXfbNXfBfQvua0eUN/i5fFmoDFC3RnxmVWJXCapi1Hkt
        CiZi5qyCCxNvFLgYj2w2wXjbpbiA2lHENfliJ3USbRzJueIRgUtvCZmFYTqh2/blOlwozXddsH24dh1h
        kFjIbbJK6TPIxCpDrGUa7ofG+6RAru1cbps7rmv7dP36mWcY/+azdlCZI0E5npBcl3KwWIKS9Z0/mSgM
        5N2pzwowz3bi8aUxfl5hStsEasz1MBjvZQFaLP50AuMuPTRLshVMr1CWKENUi0kcFN3ubYeSuKcMkPkR
        MMsgBJauGGdp/kbg1eIioBEEKcnBdJZR1wU/ywj9XPcs2GOuA8OCzVXaT0nUkhIqHgMR1Jj1nafgHTEQ
        92dyaiEbJDdLzAMRgl03Ar04ptbSQqK9tA2zpej+V0f5cYKS1mI0a1CruI5xn+KTmCBIj3AfjFAo03Rf
        BGkzDmXR4uFyXdfb91L6cn3gdx2FSnAohOtVh4TrklmO9zMGlJMHET+VKJSBohDg+EKEZxNrz9tCWmIi
        7q++XYsATLTbT47JHkiw9QUaUnIWQ/u5JUmHWMM1EBrmVkZpOaXdo96Q2kh3n1WIM1yOOWLSPugkiDOs
        wT2NrSHK6g1HsbPcnsLa0vt4Dc+gfYVPMuP7dnwttIPHYCACMElazBVIdXcRpnGJmKJ24a64HJ0BQlPH
        iGtlfeKFCh8znLuPHEfg5iKIj1+3uo9YB/fmXNdYuuSRzIUSiKeUUwJknUmWigfKknJ5jpWys2jJUM3t
        nh1fC+3gMRiIpogffDL/K+PDsH3kGLtlJR3qLAKSbAjOhCbuyfzEGAGZNV6WnoNxcUFHRFximd1xHTSQ
        xT733expCJbHUDLC50KVHATEAv83kKSwRJtH8YSAuETliOyQFUlEuHP8ulvH10I7eCwG4q4UjMzefxPQ
        +8O0NcQ9aEmxMq5PC8krNJIPN+H+xDMWxmVKTqTEXiIglLFT7pN1i5kYKMExJk0v1O91Xv3MLVEW6T1X
        bqu1cdmsT9cXu1iMhESGifESA/HIe86USHliR7F6UleGG5REgYSGMMW7lqeFdvBYDMQ6BGf9LV0GD4zp
        3KL4tJYIjUvxoDrqLArTWSqL9bCYAwTB31cXW8zzqQNu7UurynH+Xn8rjL/Xzz65JbUbYXFldQy4jrko
        A8RV1kRhdGO4TZYmO1XjKbwlDRTXPNWAslXub35XquNpoR08FguiSbRPRmNysh/aL9VmLRXY1xDhWsPi
        hqTzEhAxzWIjtyQFFvhZrxS8oPMhtXZ/BSfGcznLY8DPEpZx/I6AgCgFC65j6njKo3PBusQnmaF4ZK7m
        5NnLepQkYpK0XdapRtxKUDqeFtrBq2BBtEV9RKMwC6MFWA9I+xTIUt59WRyBSulpOdciJlScEDu4DouN
        GqC1mOhtDsAUwVrRK1ZxaWP3XLfccT7FsPFnGayYyY2Jicbrb0A43LznUJaIaeZXBa77WcoRv1xHvBIC
        WgXt+FloB6+ChgRcD6Qu0fOiWVwRl6g2Eje0c3TKMb1zjR7MO7pcHvem1lqbLjuXsBSnLJDWE3B1Pbgf
        7gqzfRbqd+5LvaODIk6JKd501LLi1sQjMYrVEI6akGuzWixJqP0ge+fb8bPQDl4VO4jAaJT+lh4eF6KY
        lNFJySUMrMzfLUssrQxDuRJZoBT4kFgnZooZrE2fT7rNDZsDV8rFgWWW+hm4a3FW9inWEQZrAcmNuQP3
        qLAmNHNjdbzJWmVq+TiiHbwq9hANV0fQZr7d0rosTlAWQ1gN/05gm7ccJtKolTXZi0Boq5kwERel8yEJ
        IGxuGOPVagI96GTXz/W7+RCWuCQO8goatrI9VkPpZJvSbivV+9z4TB3vdqEdPBX2EIF5KAWxto00HCPq
        f2GoQ7jLWr6uOosrkb5vqLvviIkohlRalub6VpW1lAR2dZ66DLi48VN8FVvERNZo6cJ8QWx1Xc9Aadq4
        s6RujmvQDp4aK8iDco0SAn5dsqFeEs/UR/UtK5ixxZDufiMmEvgVyvZWaAArlCseuvcaXIm6uR2CdvBc
        WEksB2Nlany/+GA/RLVgtqi7z4gQJkvlZZ3iDutYpf2noG5Ox6AdvA7sIZpuz4VYIEMUHwjvAoO7a48I
        uRarlACwVNnl2aibwynQDl43dhBLkJJbasBkDVsuayOs7jodQgQlrRb37MFwjQvUnXub0A7eFBqS4qqz
        dM3tmVAHqYHa8zuECErtQ1CSFSXCTN05txHt4E1iQZisuNRr06vTYN2kv925HUIlKKk/Qc0W1R1/W9EO
        3jQG4uakx5KK+n6/qwpqtqju+NuKdvA2YCBfoCG11nJSax0rqIpRCucNdcffTtx5l/8DEfNCU8hKYMoA
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="AvatarImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>